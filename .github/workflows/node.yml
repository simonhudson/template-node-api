# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
    pull_request:
        branches: 'main'
        types:
            - closed
env:
    GH_TOKEN: ${{ github.token }}

jobs:
    build:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [18.x] # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'

            # Set outputs
            - name: Set outputs
              id: vars
              run: echo "commit_sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
            - name: Check outputs
              run: echo ${{ steps.vars.outputs.commit_sha_short }}

            # Provide GH creds
            - run: git config user.name "${{ github.actor }}"
            - run: git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"

            # Create temporary branch
            - run: git checkout -b release

            # Install dependencies
            - run: npm ci

            # Build
            - run: npm run build --if-present

            # Add /dist to temporary branch
            - run: git add dist

            # Remove files/folders we don't want in the build
            - run: git rm -r .github .vscode postman src test .babelrc .env.example .eslintrc.json .gitignore .prettierrc jest.config.ts package-lock.json package.json tsconfig.json

            # Commit changes
            - run: git commit -m "Configure for build and release"

            # Push temporary branch
            - run: git push --set-upstream origin release

            ## Create release
            - run: gh release create ${{ steps.vars.outputs.commit_sha_short }} --title ${{ steps.vars.outputs.commit_sha_short }} --notes "Pull Request \#${{ github.event.number }}"
